pipeline {
    agent any
    environment {
        DOCKER_HUB_USERNAME = 'rupeshkr'                     // Docker Hub username
        DOCKER_REPOSITORY = 'myrepo'           // Repository name
        DOCKER_IMAGE = "${DOCKER_HUB_USERNAME}/${DOCKER_REPOSITORY}"
        DOCKER_CREDENTIALS = 'docker-hub-credentials-id'     // Jenkins credentials ID for Docker Hub
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/RU-PACE/sports-data-platform.git'
            }
        }
        stage('Test Docker Compose') {
            steps {
                dir('app') { // Navigate to the app folder
                    sh 'docker-compose --version'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image for the FastAPI service
                    sh """
                        docker build -t ${DOCKER_IMAGE}:latest -f Dockerfile .
                    """
                }
            }
        }
        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    def imageTag = "${env.BUILD_NUMBER}"  // Generate a unique tag for the build
                    sh "docker tag ${DOCKER_IMAGE}:latest ${DOCKER_IMAGE}:${imageTag}"

                    // Login to Docker Hub
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}",
                                                     usernameVariable: 'DOCKER_USER',
                                                     passwordVariable: 'DOCKER_PASS')]) {
                        sh "echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin"
                    }

                    // Push both 'latest' and build-specific tags
                    sh "docker push ${DOCKER_IMAGE}:${imageTag}"
                    sh "docker push ${DOCKER_IMAGE}:latest"
                }
            }
        }
        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Update the `docker-compose.yml` file dynamically to use the Docker Hub image
                    sh """
                        sed -i 's|image: sports-data-platform:latest|image: ${DOCKER_IMAGE}:latest|' docker-compose.yml
                    """

                    // Deploy using docker-compose
                    sh """
                        docker-compose down
                        docker-compose up -d
                    """
                }
            }
        }
    }
    post {
        always {
            // Cleanup
            sh 'docker-compose down --remove-orphans'
        }
    }
}
